======================================================================
                         DeviShell v2.0
              The Ultimate PowerShell Experience
======================================================================

A completely redesigned, feature-rich, high-performance shell
environment built with Python that wraps PowerShell 7 with advanced
functionality, stunning UI, and infinite extensibility.

----------------------------------------------------------------------
üé® NEW IN VERSION 2.0 - COMPLETE REDUX
----------------------------------------------------------------------

This is a MASSIVE overhaul with 10x more features and functionality!

NEW FEATURES:
‚úì 5 Beautiful Themes (default, dark, matrix, ocean, sunset)
‚úì JSON-based Configuration System
‚úì Command Aliases with Expansion
‚úì Directory Bookmarks (@bookmark navigation)
‚úì Plugin Architecture for Custom Extensions
‚úì Startup Script Execution (.devishell/startup.dsh)
‚úì 30+ Built-in Commands (tripled from v1!)
‚úì Enhanced Git Integration (ahead/behind indicators)
‚úì System Monitoring & Process Management
‚úì File Operations Suite (copy, move, remove, touch)
‚úì Advanced File Search (grep with regex)
‚úì Syntax Highlighting for File Display
‚úì Network Tools (port scanning)
‚úì Encoding/Decoding Utilities
‚úì Weather Information Integration
‚úì Calculator Command
‚úì Environment Variable Management
‚úì Disk Usage Analysis
‚úì Command History with Search (Ctrl+R)
‚úì Key Bindings (Ctrl+L to clear)
‚úì Previous Directory Navigation (cd -)
‚úì Enhanced Autocomplete (commands, files, bookmarks)


----------------------------------------------------------------------
üìã COMPLETE COMMAND REFERENCE
----------------------------------------------------------------------

üîß BUILT-IN COMMANDS:
  ‚Ä¢ cd [path|@bookmark|-]    - Change directory (supports bookmarks and -)
  ‚Ä¢ exit / quit              - Exit DeviShell
  ‚Ä¢ clear / cls              - Clear the screen
  ‚Ä¢ history                  - Show command history

‚öôÔ∏è CONFIGURATION COMMANDS:
  ‚Ä¢ config_set <key> <val>   - Set configuration value
  ‚Ä¢ config_get [key]         - Get configuration value(s)
  ‚Ä¢ theme [name]             - Set or list available themes

üìç BOOKMARK COMMANDS:
  ‚Ä¢ bookmark [name] [path]   - Create or list bookmarks
  ‚Ä¢ unbookmark <name>        - Remove a bookmark
  ‚Ä¢ cd @<name>               - Jump to a bookmark

üîó ALIAS COMMANDS:
  ‚Ä¢ alias [name] [command]   - Create or list aliases
  ‚Ä¢ unalias <name>           - Remove an alias

üìÅ FILE OPERATIONS:
  ‚Ä¢ search <term> [-p path]  - Search for files/directories
  ‚Ä¢ tree [path] [-d depth]   - Display directory tree
  ‚Ä¢ mkcd <name>              - Create and enter directory
  ‚Ä¢ touch <filename>         - Create empty file
  ‚Ä¢ cat <file> [-n lines]    - Display file with syntax highlighting
  ‚Ä¢ grep <pattern> [path]    - Search for pattern in files
  ‚Ä¢ copy <source> <dest>     - Copy file or directory
  ‚Ä¢ move <source> <dest>     - Move file or directory
  ‚Ä¢ remove <path> [-f]       - Remove file or directory

üåê NETWORK COMMANDS:
  ‚Ä¢ serve [port] [-d path]   - Start HTTP server (default: 8000)
  ‚Ä¢ myip                     - Show local IP address
  ‚Ä¢ port_scan [host] [start] [end] - Scan for open ports
  ‚Ä¢ weather [city]           - Get weather information

üíª SYSTEM COMMANDS:
  ‚Ä¢ sysinfo                  - Display system information
  ‚Ä¢ processes [-n limit]     - List running processes
  ‚Ä¢ kill <pid>               - Kill process by PID
  ‚Ä¢ env [var] [value]        - Get or set environment variables
  ‚Ä¢ diskusage [path]         - Show disk usage statistics

üîÄ GIT COMMANDS:
  ‚Ä¢ gitstatus                - Enhanced git status display
  ‚Ä¢ gitlog [-n count]        - Show git log
  ‚Ä¢ gitbranches              - List git branches

üõ†Ô∏è UTILITY COMMANDS:
  ‚Ä¢ pwgen [-l len] [-c cnt]  - Generate secure passwords
  ‚Ä¢ calc <expression>        - Simple calculator
  ‚Ä¢ encode <text> [-m method] - Encode text (base64, hex)
  ‚Ä¢ decode <text> [-m method] - Decode text (base64, hex)
  ‚Ä¢ timestamp                - Show current Unix timestamp
  ‚Ä¢ plugins                  - List loaded plugins
  ‚Ä¢ help_cmd [command]       - Show help information


----------------------------------------------------------------------
üé® THEMES
----------------------------------------------------------------------

DeviShell v2.0 includes 5 beautiful themes:

1. default  - Professional blue theme (original)
2. dark     - Dark green terminal aesthetic
3. matrix   - Classic matrix-style green on black
4. ocean    - Calming ocean blues
5. sunset   - Warm sunset colors

Switch themes with: theme <name>
Example: theme matrix


----------------------------------------------------------------------
‚öôÔ∏è CONFIGURATION
----------------------------------------------------------------------

All configuration is stored in: ~/.devishell/

Files:
  ‚Ä¢ config.json       - Main configuration
  ‚Ä¢ bookmarks.json    - Saved directory bookmarks
  ‚Ä¢ aliases.json      - Command aliases
  ‚Ä¢ history           - Command history
  ‚Ä¢ startup.dsh       - Startup script
  ‚Ä¢ plugins/          - Custom plugins directory

Configuration Options:
  ‚Ä¢ theme             - Active theme name
  ‚Ä¢ show_time         - Display time in prompt (true/false)
  ‚Ä¢ show_git          - Display git info in prompt (true/false)
  ‚Ä¢ show_venv         - Display virtualenv in prompt (true/false)
  ‚Ä¢ max_path_length   - Maximum path display length
  ‚Ä¢ prompt_char       - Prompt character (default: >)
  ‚Ä¢ powershell_path   - Path to PowerShell executable

Set config: config_set <key> <value>
Get config: config_get [key]


----------------------------------------------------------------------
üìç BOOKMARKS
----------------------------------------------------------------------

Bookmarks let you quickly navigate to frequently used directories.

Create bookmark for current directory:
  bookmark myproject

Create bookmark for specific path:
  bookmark docs ~/Documents

Jump to bookmark:
  cd @myproject

List all bookmarks:
  bookmark

Remove bookmark:
  unbookmark myproject


----------------------------------------------------------------------
üîó ALIASES
----------------------------------------------------------------------

Aliases let you create shortcuts for commonly used commands.

Create alias:
  alias ll "ls -la"
  alias gs "gitstatus"
  alias update "git pull && npm install"

Use alias:
  ll

List all aliases:
  alias

Remove alias:
  unalias ll


----------------------------------------------------------------------
üîå PLUGIN SYSTEM
----------------------------------------------------------------------

DeviShell v2.0 supports custom plugins for extending functionality.

Plugin Location: ~/.devishell/plugins/

Creating a Plugin:
1. Create a .py file in the plugins directory
2. Implement a register() function (called on load)
3. Implement a handle_command(command: List[str]) function
4. Return True if command was handled, False otherwise

Example Plugin (example_plugin.py):

    def register():
        """Called when plugin is loaded"""
        print("Example plugin loaded!")

    def handle_command(command):
        """Handle command if recognized"""
        if command[0] == "hello":
            print("Hello from plugin!")
            return True
        return False

Plugins are automatically loaded on startup.
List loaded plugins: plugins


----------------------------------------------------------------------
üöÄ STARTUP SCRIPT
----------------------------------------------------------------------

DeviShell v2.0 executes ~/.devishell/startup.dsh on startup.

Use this to:
  ‚Ä¢ Set environment variables
  ‚Ä¢ Create aliases
  ‚Ä¢ Run initialization commands
  ‚Ä¢ Display information

Example startup.dsh:

    # My DeviShell Startup Script
    alias gs gitstatus
    alias ll ls -la
    env MY_VAR my_value
    echo Welcome to DeviShell!


----------------------------------------------------------------------
‚å®Ô∏è KEY BINDINGS
----------------------------------------------------------------------

  ‚Ä¢ Ctrl+L         - Clear screen
  ‚Ä¢ Ctrl+R         - Search command history (built into prompt-toolkit)
  ‚Ä¢ Ctrl+C         - Cancel current command
  ‚Ä¢ Ctrl+D         - Exit DeviShell
  ‚Ä¢ Tab            - Autocomplete commands/files/bookmarks
  ‚Ä¢ Up/Down        - Navigate command history


----------------------------------------------------------------------
üéØ ADVANCED FEATURES
----------------------------------------------------------------------

ENHANCED PROMPT:
  ‚Ä¢ Shows current directory (truncated if too long)
  ‚Ä¢ Virtual environment indicator
  ‚Ä¢ Git branch with dirty status (*)
  ‚Ä¢ Git ahead (‚Üë) and behind (‚Üì) indicators
  ‚Ä¢ Current time
  ‚Ä¢ Customizable prompt character

SMART AUTOCOMPLETION:
  ‚Ä¢ Command name completion
  ‚Ä¢ File and directory completion
  ‚Ä¢ Bookmark completion (@bookmark)
  ‚Ä¢ Alias completion with indicator

GIT INTEGRATION:
  ‚Ä¢ Automatic git repository detection
  ‚Ä¢ Branch name display
  ‚Ä¢ Dirty status indicator
  ‚Ä¢ Ahead/behind tracking
  ‚Ä¢ Enhanced git commands (gitstatus, gitlog, gitbranches)

DIRECTORY NAVIGATION:
  ‚Ä¢ cd -         Navigate to previous directory
  ‚Ä¢ cd           Navigate to home directory
  ‚Ä¢ cd @name     Navigate to bookmarked directory

FILE OPERATIONS:
  ‚Ä¢ Recursive search with visual output
  ‚Ä¢ Beautiful tree display with icons
  ‚Ä¢ Syntax-highlighted file viewing
  ‚Ä¢ Regex pattern search in files
  ‚Ä¢ Safe file operations with confirmations


----------------------------------------------------------------------
üì¶ INSTALLATION & REQUIREMENTS
----------------------------------------------------------------------

Requirements:
1. Python 3.8+
2. PowerShell 7 (pwsh.exe)
3. Python Libraries:
   - typer
   - prompt-toolkit
   - rich
   - GitPython
   - psutil
   - Pygments

Install Dependencies:
   pip install typer prompt-toolkit rich GitPython psutil Pygments

Or use the requirements file:
   pip install -r requirements


----------------------------------------------------------------------
üèÉ RUNNING DEVISHELL
----------------------------------------------------------------------

From Source:
   python main.py

From Executable (after building):
   DeviShell.exe

First Run:
  ‚Ä¢ Configuration directory (~/.devishell) will be created
  ‚Ä¢ Default config files will be generated
  ‚Ä¢ You can customize themes, aliases, bookmarks immediately


----------------------------------------------------------------------
üî® BUILDING EXECUTABLE
----------------------------------------------------------------------

1. Install PyInstaller:
   pip install pyinstaller

2. Build command:
   pyinstaller --onefile --icon=assets/Xok.ico --name=DeviShell main.py

3. Executable will be in: dist/DeviShell.exe

4. Optional: Use build.bat for automated building


----------------------------------------------------------------------
üí° TIPS & TRICKS
----------------------------------------------------------------------

1. Use bookmarks for your most-visited directories:
   bookmark work ~/work/projects
   cd @work

2. Create aliases for common commands:
   alias gp "git push"
   alias gc "git commit -m"

3. Use startup script to initialize your environment:
   echo "theme matrix" > ~/.devishell/startup.dsh

4. Try different themes to find your favorite:
   theme sunset

5. Use grep to search code:
   grep "function" . -r

6. Monitor system resources:
   sysinfo
   processes

7. Scan network ports:
   port_scan localhost 8000 9000

8. Generate secure passwords:
   pwgen -l 32 -c 5


----------------------------------------------------------------------
üîÑ UPGRADE GUIDE (v1.x ‚Üí v2.0)
----------------------------------------------------------------------

Version 2.0 is a complete rewrite with backward-compatible commands.

New Dependencies Required:
  ‚Ä¢ psutil (system monitoring)
  ‚Ä¢ Pygments (syntax highlighting)

All your PowerShell commands still work!
Previous commands (search, tree, mkcd, serve, pwgen, myip) are enhanced.

New Features to Explore:
  1. Set up bookmarks for your favorite directories
  2. Create aliases for your most-used commands
  3. Try the new themes
  4. Explore the new file operations (copy, move, grep)
  5. Use system monitoring commands
  6. Check out the enhanced git commands


----------------------------------------------------------------------
üìû SUPPORT & FEEDBACK
----------------------------------------------------------------------

Found a bug? Have a feature request?
This is your personal DeviShell - customize it however you like!

The plugin system allows unlimited extensibility.
The configuration system lets you tailor every aspect.
The theme system gives you visual control.


----------------------------------------------------------------------
üìù LICENSE & CREDITS
----------------------------------------------------------------------

DeviShell v2.0 - Personal PowerShell Enhancement
Built with Python, Rich, Prompt-Toolkit, and Typer

Enjoy your enhanced shell experience! üöÄ
